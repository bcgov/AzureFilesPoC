# In /.github/workflows/main.yml
name: MAIN Azure Files PoC Deploy Infrastructure

permissions:
  id-token: write
  contents: read

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - test
          - prod
      plan_only:
        description: 'Only run plan (no apply)'
        required: true
        type: boolean
        default: true
  pull_request:
    branches: [ main ]
    paths:
      - 'terraform/**'
      - '.github/workflows/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # This job seems to be for a different deployment strategy or environment.
  # We are focusing on the 'terraform-dev' job for now.
  # deploy-infrastructure:
  #   uses: ./.github/workflows/terraform-common.yml
  #   # ...

  terraform-dev:
    name: 'Terraform Deploy to Dev (Trusted Services Test)'
    runs-on: ubuntu-latest
    environment: dev # Ensures correct GitHub Environment variables/secrets are used
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_USE_OIDC: true
      TF_VAR_service_principal_id: ${{ secrets.SERVICE_PRINCIPAL_ID }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: false

      # The "Get GitHub Runner Public IP" step is NOT needed for this test.
      # - name: Get GitHub Runner Public IP
      #   id: ip
      #   uses: haythem/public-ip@v1.3

      - name: Display Module Content (Debug Step)
        run: |
          echo "--- Content of terraform/modules/storage/account/main.tf (for Trusted Services Test) ---"
          cat terraform/modules/storage/account/main.tf
          echo "---------------------------------------------------------------------------------------"

      - name: Generate terraform.tfvars for dev
        run: |
          cp terraform/environments/dev/terraform.tfvars terraform/terraform.tfvars
          echo "✅ Copied dev terraform.tfvars to root for workflow use"
          echo "File size: $(wc -l < terraform/terraform.tfvars) lines"

      - name: "Validate terraform.tfvars generation"
        run: |
          if [ ! -f terraform/terraform.tfvars ]; then
            echo "❌ terraform.tfvars was not created"
            exit 1
          fi
          echo "✅ Found terraform/terraform.tfvars"
          echo "File size: $(wc -l < terraform/terraform.tfvars) lines"

      - name: Display Generated terraform.tfvars (Debug Step)
        run: |
          echo "Content of terraform/terraform.tfvars (first 20 lines):"
          head -20 terraform/terraform.tfvars
          echo "..."
          echo "Total lines: $(wc -l < terraform/terraform.tfvars)"

      - name: Terraform Init
        working-directory: terraform/environments/dev
        run: terraform init -backend-config="resource_group_name=${{ vars.TFSTATE_RG }}" -backend-config="storage_account_name=${{ vars.TFSTATE_SA }}" -backend-config="container_name=${{ vars.TFSTATE_CONTAINER }}" -backend-config="key=dev.terraform.tfstate"

      - name: Terraform Validate
        working-directory: terraform/environments/dev
        run: terraform validate

      # MODIFIED for this test: The terraform plan command is simplified and does not pass '-var="allowed_ip_rules=[...]"'
      - name: Terraform Plan
        id: plan
        working-directory: terraform/environments/dev
        run: terraform plan -var-file=../../terraform.tfvars -out=tfplan

      - name: Terraform Apply
        if: (github.ref == 'refs/heads/main' && github.event_name == 'push') || (github.event_name == 'workflow_dispatch' && github.event.inputs.plan_only == 'false')
        working-directory: terraform/environments/dev
        run: terraform apply -auto-approve tfplan