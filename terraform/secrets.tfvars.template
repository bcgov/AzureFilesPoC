# AZURE AUTHENTICATION OVERVIEW FOR TERRAFORM
# -----------------------------------------------
#
# This is a template for secrets.tfvars - a file used for service principal authentication in certain scenarios.
#
# IMPORTANT: For local development (like this PoC), you DO NOT need this file!
# Simply use 'az login' and 'az account set' commands instead.
#
# WHEN TO USE THIS FILE:
# ---------------------
# 1. CI/CD Pipelines: For automated deployments (GitHub Actions, Azure DevOps)
# 2. Shared Access: When multiple team members need non-interactive access
# 3. Production: Where using personal accounts isn't appropriate
#
# CURRENT SETUP FOR YOUR POC:
# --------------------------
# - We are using Azure CLI authentication ('az login')
# - No service principal or secrets are needed
# - No need to create an actual secrets.tfvars file
#
# IF YOU NEED TO USE SERVICE PRINCIPAL AUTHENTICATION LATER:
# --------------------------------------------------------
# 1. Register an application in Azure Active Directory
# 2. Create a client secret
# 3. Assign appropriate permissions (Contributor role to subscription/resource group)
# 4. Create a secrets.tfvars file with these values:

# client_id       = "00000000-0000-0000-0000-000000000000"  # App Registration's Application (client) ID
# client_secret   = "your-client-secret"                     # Secret created for the App Registration
# tenant_id       = "00000000-0000-0000-0000-000000000000"  # Your Azure AD tenant ID
# subscription_id = "00000000-0000-0000-0000-000000000000"  # Your Azure subscription ID

# 5. Run Terraform with: terraform apply -var-file=secrets.tfvars

# SECURITY BEST PRACTICES:
# ----------------------
# - NEVER commit the actual secrets.tfvars file to Git (it's in .gitignore)
# - For production, consider Azure Key Vault references or environment variables
# - Rotate secrets regularly and limit permissions to only what's necessary
